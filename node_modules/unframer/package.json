{
  "name": "unframer",
  "version": "2.6.4",
  "description": "Import Framer components directly in your React app, type safe and customizable",
  "sideEffects": false,
  "repository": "https://github.com/remorses/unframer",
  "bin": "bin.js",
  "files": [
    "dist",
    "framer-fixed",
    "bin.js",
    "src",
    "README.md",
    "esm"
  ],
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "module": "./esm/index.js",
      "default": "./dist/index.js"
    },
    "./src/framer.js": {
      "default": "./src/framer.js"
    },
    "./package.json": "./package.json"
  },
  "keywords": [],
  "author": "Tommaso De Rossi, morse <beats.by.morse@gmail.com>",
  "license": "",
  "peerDependencies": {
    "react": "*",
    "react-dom": "*"
  },
  "dependencies": {
    "async-sema": "^3.1.1",
    "cac": "^6.7.14",
    "chokidar": "^3.6.0",
    "dedent": "^1.5.3",
    "dprint-node": "^1.0.8",
    "esbuild": "^0.21.5",
    "esbuild-plugin-polyfill-node": "^0.3.0",
    "eventemitter3": "^3.1.2",
    "find-up": "^5.0.0",
    "fs-extra": "^11.2.0",
    "json5": "^2.2.3",
    "native-fetch": "^4.0.2",
    "picocolors": "^1.0.1",
    "real-framer-motion": "npm:framer-motion@11.2.10",
    "tmp": "^0.2.3"
  },
  "devDependencies": {
    "@babel/core": "^7.24.9",
    "@babel/helper-annotate-as-pure": "^7.24.7",
    "@babel/helper-environment-visitor": "^7.24.7",
    "@babel/helper-split-export-declaration": "^7.24.7",
    "@babel/plugin-transform-react-pure-annotations": "^7.24.7",
    "@babel/traverse": "^7.24.8",
    "@babel/types": "^7.24.9",
    "@types/babel__core": "^7.20.5",
    "@types/babel__traverse": "^7.20.6",
    "@types/bun": "^1.1.6",
    "@types/fs-extra": "^11.0.4",
    "@types/node": "^20.14.10",
    "@types/react": "^18.3.3",
    "@xmorse/deployment-utils": "^0.2.5",
    "concurrently": "^8.2.2",
    "openai": "^4.52.7",
    "posthtml": "^0.16.6",
    "react": "18.3.1",
    "react-dom": "18.3.1",
    "tiktoken": "^1.0.15"
  },
  "scripts": {
    "build": "rm -rf dist && concurrently 'tsc -m esnext --outDir esm' 'tsc' && echo copying && cp ../README.md ./README.md && cp ./src/framer.d.ts ./dist/framer.d.ts && cp ./src/framer.d.ts ./esm/framer.d.ts",
    "download-framer": "tsx scripts/download.ts",
    "watch": "rm -rf dist esm && concurrently 'tsc -w' 'tsc -m esnext -w --outDir esm'"
  }
}